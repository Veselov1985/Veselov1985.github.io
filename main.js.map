{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/@core/core.module.ts","webpack:///./src/app/@core/material/material.module.ts","webpack:///./src/app/@core/shared/services/destroy.service.ts","webpack:///./src/app/@core/shared/services/fake-api.data.ts","webpack:///./src/app/@core/shared/services/fake.api.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/loader/loader.component.html","webpack:///./src/app/components/loader/loader.component.scss","webpack:///./src/app/components/loader/loader.component.ts","webpack:///./src/app/components/pay-bill/pay-bill.component.html","webpack:///./src/app/components/pay-bill/pay-bill.component.scss","webpack:///./src/app/components/pay-bill/pay-bill.component.ts","webpack:///./src/app/service/mobile.service.ts","webpack:///./src/app/shared/enum/message-pay.enum.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {MaterialModule} from \"./material/material.module\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    MaterialModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\n\r\nexport class CoreModule {}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatInputModule, MatCardModule, MatSnackBarModule,\r\n} from \"@angular/material\";\r\nimport {CommonModule} from \"@angular/common\";\r\n\r\nconst  MATERIAL_MODULES = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatSnackBarModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MATERIAL_MODULES\r\n  ],\r\n  exports: [MATERIAL_MODULES]\r\n})\r\n\r\nexport class MaterialModule{}\r\n","import {Injectable, OnDestroy} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class NgOnDestroy extends Subject<null> implements OnDestroy {\r\n  ngOnDestroy() {\r\n    this.next(null);\r\n    this.complete();\r\n  }\r\n}\r\n","export const FAKE_API: Record<string, any> = {\r\n  'mobileCompany': [\r\n    {\r\n      name: 'МТС',\r\n      id: 1\r\n    },\r\n    {\r\n      name: 'Билайн',\r\n      id: 2,\r\n    },\r\n    {\r\n      name: 'Мегафон',\r\n      id: 3\r\n    },\r\n    {\r\n      name: 'Киевстар',\r\n      id: 4\r\n    }\r\n  ],\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {FAKE_API} from \"./fake-api.data\";\r\nimport {Observable, of} from 'rxjs';\r\nimport {delay} from \"rxjs/operators\";\r\nimport {ICompany} from \"../../../shared/company.interface\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class FakeApiService {\r\n\r\n  constructor(){}\r\n\r\n  public post(name: string): Observable<ICompany[]>{\r\n    return of(FAKE_API[name])\r\n      .pipe(delay(3000))\r\n  }\r\n\r\n  public pay(params): Observable<boolean>{\r\n    return of(Math.random() >= 0.5)\r\n      .pipe(delay(3000))\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"mobile-list\\\">\\n  <app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n  <h1 class=\\\"mobile-title\\\">Доступные операторы для пополнения</h1>\\n  <mat-card class=\\\"mobile-item\\\" *ngFor=\\\"let company of companies$ | async; index as i \\\">\\n    <div class=\\\"mobile-item__info\\\">\\n      <div class=\\\"mobile-item__number\\\">{{i+1}}</div>\\n      <div class=\\\"mobile-item__label\\\">{{company.name}}</div>\\n    </div>\\n    <button mat-button class=\\\"mobile-item__action\\\"\\n            (click)=\\\"openPayDialog(company.id)\\\">Пополнить\\n    </button>\\n  </mat-card>\\n</div>\\n\\n\"","module.exports = \":host{display:block;width:100%}.mobile-title{margin-bottom:30px;font-size:24px;color:#000000}.mobile-list{display:flex;position:relative;flex-direction:column;align-items:center;margin-top:50px;min-height:50vh}.mobile-item{display:flex;justify-content:space-between;align-items:center;width:300px;margin-bottom:20px}.mobile-item__info{display:flex}.mobile-item__number,.mobile-item__label{margin-right:10px}\\n\"","import {Component} from '@angular/core';\nimport {MobileService} from \"./service/mobile.service\";\nimport {Observable} from \"rxjs\";\nimport {ICompany} from \"./shared/company.interface\";\nimport {tap} from \"rxjs/operators\";\nimport {PayBillComponent} from \"./components/pay-bill/pay-bill.component\";\nimport {MatDialog} from \"@angular/material\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public isLoading = true;\n  public companies$!: Observable<ICompany[]>;\n\n  constructor(\n    private mobileService: MobileService,\n    private dialog: MatDialog,\n  ) {\n    this.companies$ = this.mobileService.getCompanies().pipe(\n      tap(() => this.isLoading = !this.isLoading)\n    );\n  }\n\n  public openPayDialog(id: number){\n    this.dialog.open(PayBillComponent, {\n      width: '500px',\n      data: id,\n    });\n  }\n\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {CoreModule} from \"./@core/core.module\";\nimport {PayBillComponent} from './components/pay-bill/pay-bill.component';\nimport {NgxMaskModule} from \"ngx-mask\";\nimport { LoaderComponent } from './components/loader/loader.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PayBillComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    NgxMaskModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ],\n  entryComponents: [\n    PayBillComponent\n  ]\n})\nexport class AppModule {\n}\n","module.exports = \"<div class=\\\"loading\\\"></div>\\n\"","module.exports = \":host{position:absolute;display:block;width:100%;height:100%;z-index:9999}\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent{\n}\n","module.exports = \"<app-loader *ngIf=\\\"isLoading\\\"></app-loader>\\n\\n<h1 mat-dialog-title align=\\\"center\\\">{{company.name}}</h1>\\n<div class=\\\"mat-dialog-pay\\\" mat-dialog-content [formGroup]=\\\"payForm\\\">\\n  <mat-form-field>\\n    <input matInput\\n           [showMaskTyped]=\\\"true\\\"\\n           [validation]=\\\"false\\\"\\n           type=\\\"text\\\"\\n           suffix=\\\" ₽.\\\"\\n           mask=\\\"0000\\\"\\n           placeholder=\\\"pay\\\"\\n           formControlName=\\\"pay\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput\\n           [showMaskTyped]=\\\"true\\\"\\n           type='text'\\n           prefix=\\\"+3\\\"\\n           mask=\\\"(000) 000 00 00\\\"\\n           placeholder=\\\"phone\\\"\\n           formControlName=\\\"phone\\\">\\n  </mat-form-field>\\n</div>\\n<mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button mat-dialog-close>Отмена</button>\\n  <button mat-button (click)=\\\"pay()\\\" cdkFocusInitial [disabled]=\\\"payForm.invalid\\\">Оплатить</button>\\n</mat-dialog-actions>\\n\"","module.exports = \":host{display:flex;position:relative;flex-direction:column;width:100%}\\n\"","import {Component, Inject, OnInit, Self} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MobileService} from \"../../service/mobile.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {ICompany} from \"../../shared/company.interface\";\nimport {IPayBill} from \"../../shared/pay-bill.interface\";\nimport {mergeMap, takeUntil} from \"rxjs/operators\";\nimport {NgOnDestroy} from \"../../@core/shared/services/destroy.service\";\nimport {EMessagePay} from \"../../shared/enum/message-pay.enum\";\nimport {of} from \"rxjs\";\n\n@Component({\n  selector: 'app-pay-bill',\n  templateUrl: './pay-bill.component.html',\n  styleUrls: ['./pay-bill.component.scss'],\n  providers: [NgOnDestroy]\n})\nexport class PayBillComponent implements OnInit {\n  isLoading = false;\n  payForm: FormGroup;\n  company: ICompany = this.mobileService.getCompanyItem(this.id);\n\n  get form(): IPayBill {\n    return this.payForm.value;\n  }\n\n  constructor(\n    private mobileService: MobileService,\n    @Inject(MAT_DIALOG_DATA) public id: number,\n    public dialogRef: MatDialogRef<PayBillComponent>,\n    @Self() private onDestroy$: NgOnDestroy,\n  ) {\n    this.registerControl(this.id);\n    const formChanges = this.payForm.valueChanges.pipe(\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  registerControl(id: number) {\n    this.payForm = new FormGroup({\n      id: new FormControl(id),\n      pay: new FormControl(1, [Validators.required, Validators.min(1), Validators.max(1000)]),\n      phone: new FormControl('', [Validators.required, Validators.minLength(10)])\n    })\n  }\n\n  public pay() {\n    this.toggleLoader();\n    this.mobileService.pay(this.form)\n      .pipe(\n        mergeMap((response: boolean) => {\n          const title = response ? EMessagePay.Success : EMessagePay.Error;\n            this.mobileService.openSnackBar(title, response);\n            return of(response)\n        })\n      )\n      .subscribe((res: boolean) => {\n        if (res) this.dialogRef.close();\n        this.toggleLoader();\n      })\n  }\n\n  private toggleLoader() {\n    this.isLoading = !this.isLoading;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FakeApiService} from \"../@core/shared/services/fake.api.service\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {tap} from \"rxjs/operators\";\nimport {ICompany} from \"../shared/company.interface\";\nimport {IPayBill} from \"../shared/pay-bill.interface\";\nimport {MatSnackBar} from \"@angular/material\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MobileService {\n  private storeCompanies: BehaviorSubject<ICompany[]> = new BehaviorSubject<ICompany[]>([]);\n\n  constructor(\n    private fakeApi: FakeApiService,\n    private snackBar: MatSnackBar\n  ) {\n  }\n\n  public getCompanies(): Observable<any> {\n    return this.fakeApi.post('mobileCompany')\n      .pipe(\n        tap((companies: ICompany[]) => this.storeCompanies.next(companies))\n      );\n  }\n\n  public getCompanyItem(id: number): ICompany {\n    return this.storeCompanies.getValue().find((item: ICompany) => item.id === id)\n  }\n\n  public pay(params: IPayBill) {\n    return this.fakeApi.pay(params);\n  }\n\n  public openSnackBar(title, state: boolean) {\n    const panelClass = state ? 'snack__success' : 'snack__error';\n    return this.snackBar.open(title, 'Ok', {\n      panelClass,\n      duration: 5000,\n    })\n  }\n}\n","export enum EMessagePay {\r\n  Success = 'Оплата прошла успешно',\r\n  Error = 'Произошла ошибка, попробуйте позже'\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}